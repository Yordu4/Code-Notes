erros{
    syntax error
    runtime error - runtime errors when code fails to 
    execute or has unexpected behavior
    semantic error - code does not run as intended
}

*use console.log(); 

*Use typeof to Check the Type of a Variable
You can use typeof to check the data structure, or type, of a
variable. This is useful in debugging when working with multiple
data types. If you think you're adding two numbers, but one 
is actually a string, the results can be unexpected. Type errors 
can lurk in calculations or function calls. Be careful 
especially when you're accessing and working with external data
in the form of a JavaScript Object Notation (JSON) object.
Here are some examples using typeof:
console.log(typeof ""); // outputs "string"
console.log(typeof 0); // outputs "number"
console.log(typeof []); // outputs "object"
console.log(typeof {}); // outputs "object"
JavaScript recognizes six primitive (immutable) data types: 
Boolean, Null, Undefined, Number, String, and Symbol (new with ES6)
and one type for mutable items: Object. Note that in JavaScript,
arrays are technically a type of object.

*Catch Misspelled Variable and Function Names
Not Passed

*Catch Unclosed Parentheses, Brackets, Braces and Quotes

*Catch Use of Assignment '=' Operator Instead of 
Equality '==' Operator

*Catch Missing Open and Closing Parenthesis After a Function Call
function myFunction() {
  return "You rock!";
}
let varOne = myFunction; // set to equal a function
let varTwo = myFunction(); // set to equal the string "You rock!"

*Catch Mixed Usage of Single and Double QuotesPassed
// These are correct:
const grouchoContraction = "I've had a perfectly 
wonderful evening, but this wasn't it.";
const quoteInString = "Groucho Marx once said 
'Quote me as saying I was mis-quoted.'";
// This is incorrect:
const uhOhGroucho = 'I've had a perfectly wonderful 
evening, but this wasn't it.';
Of course, it is okay to use only one style 
of quotes. You can escape the quotes inside the string by
 using the backslash (\) escape character:
// Correct use of same quotes:
const allSameQuotes = 'I\'ve had a perfectly wonderful
evening, but this wasn\'t it.';


