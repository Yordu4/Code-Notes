let myString = "Hello, World!";
let myRegex = /Hello/;
let result = myRegex.test(myString);
console.log(result); //true

let petString = "James has a pet cat.";
let petRegex = /cat|dog|bird|fish/; //match any of these
let result = petRegex.test(petString); // true

let myString = "freeCodeCamp";
let fccRegex = /freecodecamp/i; //ignore the case of letters
let result = fccRegex.test(myString); //true

let extractStr = "Extract the word 'coding' from this string.";
let codingRegex = /coding/; 
let result = extractStr.match(codingRegex); //returns coding

let twinkleStar = "Twinkle, twinkle, little star";
let starRegex = /twinkle/ig; // add g flag to extract more matches
let result = twinkleStar.match(starRegex); //Returns ["Twinkle", "twinkle"]

let exampleStr = "Let's have fun with regular expressions!";
let unRegex = /un./; //matches strings like "fun", "pun", "nun", and "bun"
let result = unRegex.test(exampleStr);

let bigStr = "big";
let bagStr = "bag";
let bugStr = "bug";
let bogStr = "bog";
let bgRegex = /b[aiu]g/;
bigStr.match(bgRegex); // Returns ["big"]
bagStr.match(bgRegex); // Returns ["bag"]
bugStr.match(bgRegex); // Returns ["bug"]
bogStr.match(bgRegex); // Returns null

let catStr = "cat";
let batStr = "bat";
let matStr = "mat";
let bgRegex = /[a-e]at/;
catStr.match(bgRegex); // Returns ["cat"]
batStr.match(bgRegex); // Returns ["bat"]
matStr.match(bgRegex); // Returns null

let jennyStr = "Jenny8675309";
let myRegex = /[a-z0-9]/ig;
// matches all letters and numbers in jennyStr
jennyStr.match(myRegex);

let quoteSample = "3 blind mice.";
let myRegex = /[^aeiou0-9]/ig; 
//match characters that are not numbers and vowels
let result = quoteSample.match(myRegex);

let difficultSpelling = "Mississippi";
let myRegex = /s+/ig; // gets 
let result = difficultSpelling.match(myRegex); // result = ["ss", "ss"]

let soccerWord = "gooooooooal!";
let gPhrase = "gut feeling";
let oPhrase = "over the moon";
let goRegex = /go*/; // test if 'o' occurs 0 or more times
soccerWord.match(goRegex); // Returns ["goooooooo"]
gPhrase.match(goRegex); // Returns ["g"]
oPhrase.match(goRegex); // Returns null

let text = "<h1>Winter is coming</h1>";
let myRegex = /<.*?>/;
let result = text.match(myRegex);
// code above will match "<h1>" 
// instead of "<h1>Winter is coming</h1>"
// it will get the shortest match with the ? character

let firstString = "Ricky is first and can be found.";
let firstRegex = /^Ricky/; //Ricky at the beginning
firstRegex.test(firstString);
// Returns true
let notFirst = "You can't find Ricky now.";
firstRegex.test(notFirst);
// Returns false

let theEnding = "This is a never ending story";
let storyRegex = /story$/;//story at the end
storyRegex.test(theEnding);
// Returns true
let noEnding = "Sometimes a story will have to end";
storyRegex.test(noEnding);
// Returns false

let longHand = /[A-Za-z0-9_]+/;
let shortHand = /\w+/;//shortcut for regexp above
let numbers = "42";
let varNames = "important_var";
longHand.test(numbers); // Returns true
shortHand.test(numbers); // Returns true
longHand.test(varNames); // Returns true
shortHand.test(varNames); // Returns true

let shortHand = /\W/;//match nonalphanumeric character
let numbers = "42%";
let sentence = "Coding!";
numbers.match(shortHand); // Returns ["%"]
sentence.match(shortHand); // Returns ["!"]

let movieName = "2001: A Space Odyssey";
let numRegex = /\d/g; 
let result = movieName.match(numRegex).length;
// movieName.match(numRegex) returns an
// array so you can use .length property
console.log(result); // 4 

let movieName = "2001: A Space Odyssey";
let noNumRegex = /\D/g; // Change this line
let result = movieName.match(noNumRegex).length;
